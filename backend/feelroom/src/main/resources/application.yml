# src/main/resources/application.yml

spring:
  datasource:
    url: jdbc:mysql://i13D208.p.ssafy.io:3306/movie_recommendation_db?useSSL=false&serverTimezone=Asia/Seoul&characterEncoding=UTF8
    username: root # 본인의 MySQL 사용자 이름으로 변경
    password: gongtong208gumi # 본인의 MySQL 비밀번호로 변경
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: none # 애플리케이션 시작 시 스키마 변경을 하지 않음 (테이블 수동 생성 필수)
    show-sql: true # 실행되는 SQL 쿼리를 콘솔에 표시
    properties:
      hibernate:
        format_sql: true # SQL 쿼리 포맷팅
    open-in-view: false # Lazy 로딩 관련 설정, 성능을 위해 false 권장
  data:
    redis:
      url: redis://${SPRING_REDIS_HOST:localhost}:${SPRING_REDIS_PORT:6379}
    elasticsearch:
      repositories:
        enabled: true
  elasticsearch:
    uris: http://${ELASTICSEARCH_HOST:localhost}:${ELASTICSEARCH_PORT:9200}
    connection-timeout: 5s
    socket-timeout: 30s
  jackson:
    serialization:
      write-dates-as-timestamps: false
    deserialization:
      fail-on-unknown-properties: false
    time-zone: Asia/Seoul
  
  mail:
    host: smtp.gmail.com  # Gmail SMTP 서버
    port: 587
    username: heyfeelroom@gmail.com  # 발송용 Gmail 주소
    password: mphidnjprvsgwenv  # Gmail 앱 비밀번호 (2단계 인증 필요)
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
          connectiontimeout: 5000
          timeout: 3000
          writetimeout: 5000

s3:
  bucket:
    name: feelroom-1

kobis:
  api:
    key: b2cbd6969cf7b74aafd33ee81bf134e5
    base-url: http://www.kobis.or.kr/kobisopenapi/webservice/rest/boxoffice/searchDailyBoxOfficeList.json

tmdb:
  api:
    key: 3c3356b9a0daa1dbb9e21cda8b7b5d30 # 본인의 TMDB API 키로 변경
    base-url: https://api.themoviedb.org/3
    call-delay-ms: 200 # 각 API 호출 간 지연 시간 (밀리초), 예: 200ms
  image:
    base-url: https://image.tmdb.org/t/p/original # 포스터 이미지의 기본 URL
jwt:
  secret:
    key: MXRrYXRqZGZrZGxkaHM3d21kbnRtZGdrcmxmM3ZsZmZuYXZsZmZuYTIwOA # 256비트 이상의 시크릿 키
  token:
    access-expiration-time: 3600000
logging:
  level:
    org.hibernate.SQL: debug # Hibernate가 생성하는 SQL 쿼리 로그
    com.d208.feelroom: INFO # 개발자 정의 패키지의 로깅 레벨
    org.springframework.jdbc.core.JdbcTemplate: DEBUG
    org.springframework.jdbc.core.StatementCreatorUtils: DEBUG
    com.d208.feelroom.service.JsonMovieImportService: DEBUG
    root: INFO
server:
  forward-headers-strategy: framework

springdoc:
  swagger-ui:
    operations-sorter: alpha
    tags-sorter: alpha
    servers:
      - url: https://i13d208.p.ssafy.io
        description: Production Server

management:
  endpoints:
    web:
      exposure:
        include: health,info,caches
  health:
    elasticsearch:
      enabled: false  # 이 줄 추가!

elasticsearch:
  index:
    movie: movie_index
    user: user_index
  matching:
    similarity-threshold: 0.7
    #date-diff-days: 90
fastapi:
  url: ${FASTAPI_URL:http://localhost:8000}  # 환경변수 우선, 없으면 기본값
  recommend-endpoint: ${FASTAPI_RECOMMEND_ENDPOINT:/recommend}
recommendation:
  api:
    base-url: ${FASTAPI_URL:http://localhost:8000}

spring.data.elasticsearch.index-and-mapping.skip-creating-indices: true